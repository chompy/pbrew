server {
    listen          {{ .Port }};
    server_name     localhost;
    client_max_body_size 200M;

    gzip_static on;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_vary on;
    gzip_comp_level 1;
    gzip_types application/ecmascript application/javascript application/json;
    gzip_types application/pdf application/postscript application/x-javascript;
    gzip_types image/svg+xml text/css text/csv text/javascript text/plain text/xml;

    #brotli_static on;
    #brotli_comp_level 3;  # Equivalent to gzip level 1, but often with a higher compression ratio.
    #brotli_types application/ecmascript application/javascript application/json;
    #brotli_types application/pdf application/postscript application/x-javascript;
    #brotli_types image/svg+xml text/css text/csv text/javascript text/plain text/xml;

    set $_rewrite_path "";
    set $_rewrite_querystring "";
    location @rewrite {
          rewrite . $_rewrite_path;
    }
    location @rewrite_qs {
          rewrite . $_rewrite_path?$_rewrite_querystring;
    }
    {{ range .Locations }}
    location = "{{ .Path }}" {
        alias {{ .Root }};
        set $_rewrite_path "{{ .Passthru }}";
        try_files       $uri @rewrite;
        expires         0;
    }
    location "{{ .Path }}/" {
        alias {{ .Root }}/;
        location "{{ .Path }}/" {
            set $_rewrite_path "{{ .Passthru }}";
            try_files       $uri @rewrite;
            expires         0;
            {{ range .Rules }}
            location ~ "{{ .Path }}" {
                set $_rewrite_path "{{ .Passthru }}";
                {{ if eq .Passthru "" }}
                try_files       $fastcgi_script_name =404;
                {{ else }}
                try_files       $fastcgi_script_name @rewrite;
                {{ end }}
            }
            {{ end }}

        }
        location ~ ".+?\.php(?=$|/)" {    
            set $_rewrite_path "{{ .Passthru }}";
            try_files       $fastcgi_script_name @rewrite;
            fastcgi_pass    "unix:{{ .Socket }}";
            fastcgi_request_buffering on;
            client_max_body_size 250m;
            set $_document_root $document_root;
            include         "nginx_fastcgi_params.normal";
            # Split the script name from the path info, set it as a variable so
            # that it persists after try_files has resolved the actual filename.
            fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
            set $path_info  $fastcgi_path_info;
        }

    }
    {{ end }}
}